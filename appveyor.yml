#---------------------------------#
#      general configuration      #
#---------------------------------#

version: '{build}'

branches:
  only:
    - develop
    - master
    - /release\/.+/

skip_commits:
  files:
    - '**/*.md'

#---------------------------------#
#    environment configuration    #
#---------------------------------#

image: Visual Studio 2017

platform:
  - Win32
  - x64

matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

environment:
  CTEST_OUTPUT_ON_FAILURE: 1
  MDNSWINDOWS_VERSION: '1.2.0.3'
  SLACK_WEBHOOK:
    secure: mmc+nEHnXGCwUvdD4qG3usIECTxCf86I1+DYO1hChDo6BBxKquCLLL+bTI3E1Di2/yS3CvCISXeKBC7RRrdSRfo+0Ej1Llp/oHDTTC5loSc=
  CODESIGN_DECRYPT_SECRET:
    secure: Z1VdvYVbzcA99+sBtiwEatQkNSMHCe5iGMVmqHuZd5o=
  CODESIGN_CERT_SECRET:
    secure: cLWx1U9DisHiA9zMooiMXQ==

#---------------------------------#
#   default build configuration   #
#---------------------------------#

configuration: Release

before_build:
  - cmd: |-
      set /P RDMNET_VERSION=< tools/version/current_version.txt
      if "%APPVEYOR_REPO_TAG%" == "true" (
        set RDMNET_ARTIFACT_VERSION=%RDMNET_VERSION%
      ) else (
        set RDMNET_ARTIFACT_VERSION=%APPVEYOR_REPO_COMMIT%
      )
      mkdir build
      cd build
      cmake --version
      cmake -G "%CMAKE_GENERATOR%" -DCMAKE_INSTALL_PREFIX=%CMAKE_INSTALL% %CMAKE_EXTRA_ARGS% ..

build:
  parallel: true            # enable MSBuild parallel builds
  project: build\RDMnet.sln # path to Visual Studio solution or project

  # MSBuild verbosity level
  verbosity: minimal

test_script:
  - cmd: |-
      cd %APPVEYOR_BUILD_FOLDER%\build
      ctest -C Release

deploy:
  provider: BinTray
  on:
    APPVEYOR_REPO_TAG: true
    APPVEYOR_REPO_TAG_NAME: /v\d+\.\d+\.\d+\.\d+/
  username: bootress
  api_key:
    secure: N7blYxy9CNkhOB0SasJxi8OyO7Zm6/F2RPOmgQi6IAwpTigH9klt6Cl++C2eGkbD
  subject: etclabs
  repo: rdmnet_bin
  package: latest
  version: $(RDMNET_VERSION)
  publish: false

for:
  -
    matrix:
      only:
        - platform: Win32

    environment:
      CMAKE_GENERATOR: Visual Studio 15 2017
      CMAKE_INSTALL: install_x86
      CMAKE_EXTRA_ARGS: -DMDNSWINDOWS_INSTALL_LOC=../mdns_install
      QTDIR: C:\Qt\5.9.7\msvc2015
      INSTALLER_PROJECT: RDMnetInstall_x86.wixproj
      INSTALLER_PROJECT_PLATFORM: x86
      INSTALLER_ARTIFACT: bin\Release\RDMnetSetup_x86.msi

    install:
      - ps: |-
          $wc = New-Object Net.WebClient
          $wc.DownloadFile("https://dl.bintray.com/etclabs/mdnswindows_bin/mDNSWindows_$($Env:MDNSWINDOWS_VERSION)_x86.zip", "$Env:APPVEYOR_BUILD_FOLDER\mDNSWindows_x86.zip")
          7z x mDNSWindows_x86.zip -omdns_install -y -r
          $wc.DownloadFile("https://dl.bintray.com/etclabs/mdnswindows_bin/mDNSWindows_Merge_$($Env:MDNSWINDOWS_VERSION).msm", "$Env:APPVEYOR_BUILD_FOLDER\mdns_install\ETC_mDNSInstall.msm")
          iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))
      - cmd: appveyor-tools\secure-file -decrypt tools\install\windows\codesign_cert_windows.pfx.enc -secret %CODESIGN_DECRYPT_SECRET%

    after_build:
      - cmd: |-
          cmake -P cmake_install.cmake
          cd ..\tools\install\windows
          msbuild /m /p:Platform=%INSTALLER_PROJECT_PLATFORM% %INSTALLER_PROJECT%
          "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x86
          signtool.exe sign /v /a /tr "http://timestamp.digicert.com" /td sha256 /fd sha256 /f codesign_cert_windows.pfx /p %CODESIGN_CERT_SECRET% %INSTALLER_ARTIFACT% > NUL
          copy %INSTALLER_ARTIFACT% ..\..\..\RDMnetSetup_%RDMNET_ARTIFACT_VERSION%_x86.msi

    artifacts:
      - path: RDMnetSetup_%RDMNET_ARTIFACT_VERSION%_x86.msi
        name: RDMnet 32-bit installer

  -
    matrix:
      only:
        - platform: x64

    environment:
      CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      CMAKE_INSTALL: install_x64
      CMAKE_EXTRA_ARGS: -DMDNSWINDOWS_INSTALL_LOC=../mdns_install
      QTDIR: C:\Qt\5.9.7\msvc2017_64
      INSTALLER_PROJECT: RDMnetInstall_x64.wixproj
      INSTALLER_PROJECT_PLATFORM: x64
      INSTALLER_ARTIFACT: bin\Release\RDMnetSetup_x64.msi

    install:
      - ps: |-
          $wc = New-Object Net.WebClient
          $wc.DownloadFile("https://dl.bintray.com/etclabs/mdnswindows_bin/mDNSWindows_$($Env:MDNSWINDOWS_VERSION)_x64.zip", "$Env:APPVEYOR_BUILD_FOLDER\mDNSWindows_x64.zip")
          7z x mDNSWindows_x64.zip -omdns_install -y -r
          $wc.DownloadFile("https://dl.bintray.com/etclabs/mdnswindows_bin/mDNSWindows_Merge_$($Env:MDNSWINDOWS_VERSION).msm", "$Env:APPVEYOR_BUILD_FOLDER\mdns_install\ETC_mDNSInstall.msm")
          iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))
      - cmd: appveyor-tools\secure-file -decrypt tools\install\windows\codesign_cert_windows.pfx.enc -secret %CODESIGN_DECRYPT_SECRET%

    after_build:
      - cmd: |-
          cmake -P cmake_install.cmake
          cd ..\tools\install\windows
          msbuild /m /p:Platform=%INSTALLER_PROJECT_PLATFORM% %INSTALLER_PROJECT%
          "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64
          signtool.exe sign /v /a /tr "http://timestamp.digicert.com" /td sha256 /fd sha256 /f codesign_cert_windows.pfx /p %CODESIGN_CERT_SECRET% %INSTALLER_ARTIFACT% > NUL
          copy %INSTALLER_ARTIFACT% ..\..\..\RDMnetSetup_%RDMNET_ARTIFACT_VERSION%_x64.msi

    artifacts:
      - path: RDMnetSetup_%RDMNET_ARTIFACT_VERSION%_x64.msi
        name: RDMnet 64-bit installer
